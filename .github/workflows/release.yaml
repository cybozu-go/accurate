name: Release
on:
  push:
    tags:
    - 'v*'
jobs:
  image:
    name: Push Container Image
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Setup
      run: |
        docker buildx create --name=b --driver docker-container
        docker buildx use b
        echo "TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    - name: Build images
      run: |
        docker buildx build --platform=arm64,amd64 -t ghcr.io/cybozu-go/accurate:$TAG .
    - name: Login to ghcr.io
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
    - name: Push images
      run: |
        docker buildx build --platform=arm64,amd64 -t ghcr.io/cybozu-go/accurate:$TAG . --push
  release:
    name: Release on GitHub
    needs: image
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true
    - uses: ./.github/actions/aqua
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set previous release tag for GoReleaser
      run: |
        export TAG=$(curl -s "https://api.github.com/repos/cybozu-go/accurate/releases/latest" | jq -r .tag_name)
        echo "GORELEASER_PREVIOUS_TAG=${TAG}" >> $GITHUB_ENV
    - name: GoReleaser
      uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
      with:
        distribution: goreleaser
        version: v2.10.2
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Update new version in krew-index
      uses: rajatjindal/krew-release-bot@3d9faef30a82761d610544f62afddca00993eef9 # v0.0.47
  chart-release:
    runs-on: ubuntu-24.04
    needs: release
    if: contains(needs.release.result, 'success')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # vï¼”.3.0
      - name: Set chart version
        run: |
          helm repo add accurate https://cybozu-go.github.io/accurate
          helm repo update
          
          # get the release tag version
          tag_version=${GITHUB_REF##*/v}
          
          # get the latest chart version
          chart_version=$(helm search repo accurate -o json | jq -r 'sort_by(.version) | .[-1].version')
          chart_patch_version=${chart_version##*.}
          new_patch_version=$(($chart_patch_version+1))
          
          # if minor or major version changed, reset new patch version
          local_version=$(cat charts/accurate/Chart.yaml | yq .version | sed "s/0-chart-patch-version-placeholder/$chart_patch_version/g")
          [ "$local_version" != "$chart_version" ] && new_patch_version=0
          
          # replace placeholder with new version
          sed --in-place "s/app-version-placeholder/$tag_version/g" charts/accurate/Chart.yaml
          sed --in-place "s/0-chart-patch-version-placeholder/$new_patch_version/g" charts/accurate/Chart.yaml
          sed --in-place "s/app-version-placeholder/$tag_version/g" charts/accurate/values.yaml
      - name: Create release notes
        run: |
          tag_version=${GITHUB_REF##*/}
          cat <<EOF > ./charts/accurate/RELEASE.md
          Helm chart for accurate [$tag_version](https://github.com/cybozu-go/accurate/releases/tag/$tag_version)
          
          EOF
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
